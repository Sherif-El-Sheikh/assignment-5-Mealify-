/* Start variables (to define varaiables) */
:root {
    --main-color: #212529;
    --premier-color: #ce1212;
    --second-color: #37373f;
    --third-color: #7f7f90;
    --font-primary: "Amatic SC", sans-serif;
    --font-secondary: "Inter", sans-serif;
    --font-page: 'Open Sans', sans-serif;
}
:has(.mode:checked) {
    --main-color: #fff;
    --premier-color: #c17e1f;
    --second-color: #fff;
    --third-color: #9f9f9f;
}
/* End variables  */
/* Start Global Rules  */
* {
    -webkit-box-sizing: border-box; /* prefix */
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}
html {
    scroll-behavior: smooth;
    scroll-padding-top: 90px;
}
body {
    font-family: 'Open Sans' , system-ui, -apple-system, "Segoe UI", Roboto,
    "Helvetica Neue", Arial, "Noto Sans", "Liberation Sans", sans-serif,
    "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    color: var(--main-color);
}
.container {
    padding: 2.5rem 0.3125rem;
    width: 100%;
    margin-inline: auto; /*Set the margin on both sides in the inline direction (equal margin-right & margin-left)*/
    margin-top: 0;
    margin-bottom: 0;
}
/* media query */
@media(max-width: 300px) {
    :root {
        font-size: 12px;
    }
}
/* Extra extra large devices */
@media (min-width: 1400px) {
    .container {
        max-width: 1320px;
    }
}
/* X-Large devices (large desktops, less than 1400px) */
@media (max-width: 1400px) {
    .container {
        max-width: 1140px;
    }
}
/* Large devices (desktops, less than 1200px) */
@media (max-width: 1200px) {
    .container {
        max-width: 960px;
    }
}
/* Medium devices (tablets, less than 992px) */
@media (max-width: 992px) {
    .container {
        max-width: 720px;
    }
}
/* Small devices (landscape phones, less than 768px */
@media (max-width: 768px) {
    .container {
        max-width: 540px;
    }
}
/* X-Small devices (portrait phones, less than 576px) */
@media (max-width: 576px) {
    .container {
        padding-inline: 15px;  /*padding-inline = padding-left&padding-right */
    }
}

ul {
    list-style-type: none;
}
a {
    text-decoration: none;
    color: inherit;
    display: inline-block;
}
a:hover {
    text-decoration: none;
}
::selection {
     background-color: hsla(0, 84%, 44%, 0.7); /* hsla(hue, saturation, lightness, opacity) */
    color: #ffffff;
    opacity: 0.2;
}
::-webkit-scrollbar {   /* prefix the scrollbar*/ /* scrollbar-track (pseudo element)*/
    width: 12px;
    background-color: #fff; 
    border-left: 2px solid #eee;
    box-shadow: 0px 0px 21px 0px #0003 inset; /* inset انتشار للداخل */
}
 ::-webkit-scrollbar-thumb {   /* the draggable scrolling handle. */
    background-color: #000;
    box-shadow: 0px 0px 10px 0px #eeeeee8c inset;
    border-radius: 100vh;
}
/* start components */
.btn {
    border: 2px solid transparent;
    border-radius: 1rem;
    color: #ffffff;
    background-color: transparent;
    font-family: 'Open Sans', sans-serif;
    font-size: 1rem;
    padding: 5px 12px;
    cursor: pointer;
    transition: background-color 0.4s, color 0.4s;
}
.btn:hover {
    background-color: hsl(0, 84%, 49%);
}
.btn-main {
    background-color: var(--premier-color);
    padding: 0.375rem 1.125rem;
    font-size: 0.9375rem;
}
.core-head {
    text-align: center;
    margin-bottom: 25px;
}
.core-head h2 {
    font-weight: 400;
    font-size: 0.875rem;
    text-transform: uppercase;
    color: var(--third-color);
}
.core-head p {
    font-size: 3.125rem;
    font-family: var(--font-primary);
}
.core-head span {
    color: var(--premier-color);
}

/* Start Navigation Bar */
nav {
    background-color: #ffffff;
    position: fixed;
    z-index: 999;
    width: 100%;
    /* box-shadow: x, y, blur, spreed, color, */
    box-shadow: 0px 0px 14px 0px #0000001b;
}
nav:has(.mode:checked) {
    background-color: hsl(0, 0%, 9%);
}
nav .container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    padding: 25px 5px;
}
nav .links {
    display: flex;
    font-weight: 600;
    font-size: 17px;
    color: var(--third-color);
}

nav .links a {
    padding: 5px 15px;
    position: relative;
    transition: color 0.4s;
}
nav .links a:hover {
    color: #000;
}


nav .links a:not(.close)::before {
    content: '';
    position: absolute;
    height: 2px;
    width: 0;
    background-color: var(--premier-color);
    left: 15px;
    bottom: -3px;
    transition: width 0.4s;
}

nav .links a:hover::before{
    width: calc(100% - 30px);
}

/* :has() pseudo-class presents a way of selecting a parent element or a previous sibling element */
/* when user target link the width of a::before will be 100% -30px */
body:has(.home:target) li a[href="#home"]::before,
body:has(.contact:target) li a[href="#contact"]::before,
body:has(.gallery:target) li a[href="#gallery"]::before,
body:has(.chefs:target) li a[href="#chefs"]::before,
body:not(body:has(:target)) li a[href="#home"]::before {
    width: calc(100% - 30px);
}

/* URLs with an # followed by an anchor name link to a certain element within a document. The element being linked to is the target element.
The :target selector can be used to style the current active target element. */
/* when user target link the color of (a) will be #000 */
body:has(.home:target) li a[href="#home"],
body:has(.contact:target) li a[href="#contact"],
body:has(.gallery:target) li a[href="#gallery"],
body:has(.chefs:target) li a[href="#chefs"], 
body:not(body:has(:target)) li a[href="#home"]{
    color: #000;
}

/* mode:checked */
body:has(.home:target):has(.mode:checked) li a[href="#home"],
body:has(.contact:target):has(.mode:checked) li a[href="#contact"],
body:has(.gallery:target):has(.mode:checked) li a[href="#gallery"],
body:has(.chefs:target):has(.mode:checked) li a[href="#chefs"],
body:not(body:has(:target)):has(.mode:checked) li a[href="#home"]{
    color: hsl(0, 0%, 99%);
}
@media (min-width: 1200px) {
    :has(.mode:checked) nav .links a:hover {
    color: #fff;
    }
}

.logo {
    font-size: 30px;
    font-family: var(--font-page);
}

.logo::after {
    content: ".";
    color: var(--premier-color);
}

.mode-group i {
    font-size: 25px;
    cursor: pointer;
}

.mode-group .icon-light {
    display: none;
}

nav .links .close {
    display: none;
    font-size: 22px;
    align-self: flex-end;
    width: fit-content;
    /* (width: 15%;) */
}

nav .menu {
    display: none;
    font-size: 25px;
    cursor: pointer;
}

@media (max-width: 1200px) {
    nav .links {
        position: absolute;
        top: 0;
        right: 0;
        flex-direction: column;
        height: 100%;
        width: 350px;
        background-color: #fff;
        border-left: 2px solid #f1f1f1;
        z-index: 999;
        transform: translateX(100%);
        transition: transform 0.4s;
    }

    nav .links li {
        width: 100%;
        padding: 15px 10px;
    }

    /* nav .links a::before {
        bottom: 2px;
    } */

    nav .links a:hover::before,
    ul:not(:has(.home:target)) a[href="#home"]::before {
        width: 0;
    }


    nav .links .close {
        display: block;
        padding: 10px 15px 5px;
    }

    nav .menu {
        display: block;
    }

    nav .mode-group {
        margin-left: auto;
        margin-right: 1.25rem;
    }
}
nav .links:target {
    transform: translateX(0);
}
nav:has(.links:target) {
    background-color: hsla(0, 0%, 100%, 0.7);
    height: 100%;
}
:has(.mode:checked) nav:has(.links:target) {
    background-color: hsla(0, 0%, 9%, 0.7);
}
:has(.mode:checked) body {
    background-color: #202020;
}
:has(.mode:checked) .mode-group .icon-dark {
    display: none;
}
:root:has(.mode:checked) .mode-group .icon-light {
    display: block;
}
/* End Navigation Bar */
/* Start Header */
header {
    display: flex;
    align-items: center;
    background-color: #eee;
}
@media (min-width: 1200px) {
    header {
        min-height: 100vh;
    }
}
body:has(.mode:checked) header {
    background-color: #252525;
}
header .container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
}
@media (max-width: 992px) {
    header .container {
        flex-direction: column-reverse;
        gap: 50px;
    }
}
/* is () useful for writing large selectors in a more compact form
the specificity of :is() gets auto-upgraded to the most specific item in the list  */
:is(header) .container { 
    margin-top: 5.9375rem;
}
header .container > * {
    width: 40%;
}
@media (max-width: 992px) {
    header .container > * {
        width: 100%;
        text-align: center;
    }
}
header picture img {
    display: block;
    width: 100%;
         /* drop-shadow(x, y, blur, color) */
    filter: drop-shadow(4px 4px 9px #000a);
    padding-top: 0.9375rem;
}

/* another shake w3school
@keyframes shake {
    0% {
        transform: translate(1px, 1px) rotate(0deg);
    }

    10% {
        transform: translate(-1px, -2px) rotate(-1deg);
    }

    20% {
        transform: translate(-3px, 0px) rotate(1deg);
    }

    30% {
        transform: translate(3px, 2px) rotate(0deg);
    }

    40% {
        transform: translate(1px, -1px) rotate(1deg);
    }

    50% {
        transform: translate(-1px, 2px) rotate(-1deg);
    }

    60% {
        transform: translate(-3px, 1px) rotate(0deg);
    }

    70% {
        transform: translate(3px, 1px) rotate(-1deg);
    }

    80% {
        transform: translate(-1px, -1px) rotate(1deg);
    }

    90% {
        transform: translate(1px, 2px) rotate(0deg);
    }

    100% {
        transform: translate(1px, -2px) rotate(-1deg);
    }
} */
/* shake */
@keyframes shaking {
    0% { transform: translateX(0) rotate(0deg) }
    25% { transform: translateX(2px) rotate(1deg) }
    50% { transform: translateX(-2px) rotate(0deg) }
    75% { transform: translateX(2px) rotate(-1deg) }
    100% { transform: translateX(0) rotate(0deg )}
}
header picture img:hover {
    animation: shaking 0.3s infinite;
    /* animation: shake 1s infinite; */
}

header .head-caption h2 {
    font-family: var(--font-primary);
    font-size: 4.0625rem;
    color: var(--second-color)
}
header .head-caption p {
    font-size: 1rem;
    font-family: var(--font-page);
    color: #4f4f5a;
    line-height: 1.6;
    /* margin-block = margin-top & margin-bottom */
    margin-block: 1.25rem;
}
body:has(.mode:checked) header .head-caption p {
    color: #9f9f9f;
}
header .head-caption .buttons {
    display: flex;
    align-items: center;
    gap: 2.5rem;
/* There is a new gap CSS property for multi-column, flexbox, and grid layouts that works in newer browsers now */
}
@media (max-width: 992px) {
    header .head-caption .buttons {
        justify-content: center;
    }
}
@media (max-width: 400px) {
    header .head-caption .buttons {
        flex-direction: column;
        gap: 20px;
    }
}
header .head-caption .buttons button {
    border: none;
    background-color: transparent;
}
header .head-caption .buttons .btn-main {
    border-radius: 0 100vh 100vh;
    padding:  0.625rem 1.5625rem;
}
@media (max-width: 992px) {
    header .head-caption .buttons .btn-main {
        border-radius: 100vh;
    }
}
body:has(.mode:checked) header .head-caption .buttons .btn-main {
    color:#000;
}
body:has(.mode:checked) header .head-caption .buttons .btn-main:hover {
    background-color: hsl(35, 72%, 50%);
}
header .head-caption .buttons .video-btn {
    display: flex;
    font-family: 'Open Sans', sans-serif;
    font-size: 1rem;
    font-weight: 400;
    align-items: center;
    transition: color 0.4s;
}
body:has(.mode:checked) header .head-caption .buttons .video-btn {
    color: hsl(0, 0%, 100%)
}
header .head-caption .buttons .video-btn .play-icon {
    width: 3.4375rem;
    height: 3.4375rem;
    border-radius: 50%;
    font-size: 1rem;
    margin-right: 0.3125rem;
    display: flex;
    justify-content: center;
    align-items: center;
    background-image: linear-gradient(90deg, var(--premier-color) 0 50%, transparent  50% 100%);
    position: relative;
}
header .head-caption .buttons .video-btn .play-icon::before {
    content: '';
    position: absolute;
    width: 2.5rem;
    height: 2.5rem;
    background-color: hsl(0, 0%, 100%);
     border-radius: inherit; /*from play-icon */
}
body:has(.mode:checked) header .head-caption .buttons .video-btn .play-icon::before {
    background-color: hsl(0, 0%, 0%);
}
header .head-caption .buttons .video-btn .play-icon i {
    z-index: 2;
    font-weight: 600;
}

body:has(.mode:checked) header .head-caption .buttons .video-btn .play-icon i {
    color: hsl(0, 0%, 100%);
}
header .head-caption .buttons a:not(.btn):is(:hover) {
    color: hsl(0, 84%, 49%);
}

body:has(.mode:checked) header .head-caption .buttons a:not(.btn):is(:hover) i,
body:has(.mode:checked) header .head-caption .buttons a:not(.btn):is(:hover) {
    color: hsl(35, 72%, 44%);
}
/* End Header */
/* Start Chefs */
:is(section) .container {
    margin-block: 3.125rem;
}
section.chefs .chefs-head h2 {
    font-family: var(--font-secondary);
}
.chefs-cards {
    display: flex;
    gap: 1.875rem;
    padding-block: 1.25rem;
    flex-wrap: wrap;
}
.chefs .chefs-cards .card {
    width: calc( (100% - 60px) / 3);
    background-color: hsl(0, 0%, 100%);
    border-radius: 0.5rem;
    text-align: center;
    /* box-shadow: x, y, blur, spreed, color, */
    box-shadow: 3px 3px 15px 0px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    transition: scale 0.4s;
    position: relative;
}
:has(.mode:checked) .chefs .chefs-cards .card {
    background-color: hsl(0, 0%, 9%);
}
@media (max-width: 992px) {
    .chefs .chefs-cards .card {
        width: calc( (100% - 60px) / 2);
    }
}
@media (max-width: 768px) {
    .chefs .chefs-cards .card {
        width: 100%;
    }
}
.chefs .chefs-cards .card picture {
    width: 100%;
    display: block;
    position: relative;
}
.chefs .chefs-cards .card picture img {
    width: 100%;
    display: block;
}
/* CSS scale can affect the disposition of an element's content, parent, and siblings, 
while transform lets you apply graphical effects to elements once their position and size has already been determined.
It is important to know that the scale property does not cause other elements to flow around it like the scale() transform function does. 
That means an element’s scale does not result in the elements around it reflowing in order to make additional (or less) room available based on the scale of that element. */
.chefs .chefs-cards .card:hover {
    scale: 1.07;
    /* transform: scale(1.07); */
}
.chefs .chefs-cards .card picture::before {
    content: '';
    position: absolute;
    background-image: url(../imgs/team-shape.svg);
    background-repeat: repeat-x;
    left: 0;
    bottom: -1px;
    width: 100%;
    height: 3.75rem;
}
:has(.mode:checked) .chefs .chefs-cards .card picture::before {
    background-image: url(../imgs/team-shape-dark.svg);
}
.chefs-cards .card-caption {
    padding: 0.625rem 1.5625rem 1.5625rem;
}
.chefs-cards .card .card-caption h3 {
    font-family: var(--font-secondary);
}
.chefs-cards .card .card-caption span {
    display: block;
    color: var(--third-color);
    font-size: 0.875rem;
    margin-block: 0.3125rem 0.625rem;
}

.chefs-cards .card .card-caption p {
    color: var(--third-color);
    font-size: 0.9375rem;
    font-style: italic;
}
.chefs-cards .card .social-card {
    position: absolute;
    background-color: #ffffff4d;
    /* The fit-content behaves as fit-content(stretch).
     In practice this means that the box will use the available space, but never more than max-content. */
    width: fit-content;
    top: 1.875rem;
    right: -3.125rem;
    padding: 0.625rem;
    border-radius: 0.3125rem;
    transition: right 0.2s;
}
.chefs-cards .card .social-card i {
    color: #37373f66;
    font-size: 1.125rem;
    padding: 0.625rem 0.3125rem;
    transition: color 0.4s;
}
.chefs-cards .card:hover .social-card {
    right: 0.625rem;
    transition: right 0.4s 0.4s;
}
.chefs-cards .card .social-card i:hover {
    color: #37373fe6;
}
/* End Chefs */
/* Start Gallery */
section.gallery {
    background-color: #eee;
    padding-block: 0.1rem;
}
:has(.mode:checked) section.gallery {
    background-color: #252525;
}
section.gallery .gallery-head {
    font-family: var(--font-secondary);
}
/* Masonry Layout */
.gallery .gallery-imags {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    height: 72.8125rem;
    gap: 1.25rem;
}
@media (max-width: 1400px) {
    .gallery .gallery-imags {
        height: 1000px;
    }
}
@media (max-width: 1200px) {
    .gallery .gallery-imags {
        height: 845px;
    }
}
@media (max-width: 992px) {
    .gallery .gallery-imags {
        height: 1405px;
    }
}
@media (max-width: 768px) {
    .gallery .gallery-imags {
        height: auto;
    }
}
.gallery .gallery-imags picture {
    width: calc((100% - 40px) / 3);
    border: 4px solid #fff;
    position: relative;
    overflow: hidden;
}
@media (max-width: 992px) {
    .gallery .gallery-imags picture {
        width: calc((100% - 40px) / 2);
    }
    .gallery .gallery-imags .pizza {
        order: 1;
    }
    .gallery .gallery-imags .burger {
        order: 2;
    }
    .gallery .gallery-imags .Levitation-pizza {
        order: 3;
    }
    .gallery .gallery-imags .omelette {
        order: 4;
    }
    .gallery .gallery-imags .steak {
        order: 5;
    }
    .gallery .gallery-imags .fried-chicken {
        order: 6;
    }
    .gallery .gallery-imags .kebab {
        order: 7;
    }
}
@media (max-width: 768px) {
    .gallery .gallery-imags picture {
        width: 100%;
    }
}
.gallery .gallery-imags picture img {
    width: 100%;
    transition: scale 0.4s;
}
.gallery .gallery-imags picture .overlayer {
    position: absolute;
    top: 100%;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #00000096;
    color: #fff;
    padding: 0.9375rem;
    z-index: 99;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 5px;
    transition: top 0.4s;
}
.gallery .gallery-imags picture .overlayer p {
    color: #ddd;
    text-align: center;
}
.gallery .gallery-imags picture:hover .overlayer {
    top: 0;
}
.gallery .gallery-imags picture:hover img {
    scale: 1.1;
}
/* End Gallery */
/* Start Contact */
section.contact iframe {
    width: 100%;
    height: 21.875rem;
}
section.contact .contact-info {
    margin-block: 1.5625rem;
    display: flex;
    gap: 0.9375rem;
    flex-wrap: wrap;
}
/* .parent > .child = Direct Child */
section.contact .contact-info > div {
    width: calc((100% - 0.9375rem) / 2);
    display: flex;
    align-items: center;
    padding: 1.5625rem;
    background-color: hsl(0, 0%, 96%);
}
@media (max-width: 768px) {
    section.contact .contact-info > div {
        width: 100%;
    }
}
:has(.mode:checked) section.contact .contact-info > div {
    background-color: hsl(0, 0%, 5%);
}
section.contact .contact-info .icon {
    background-color: var(--premier-color);
    border-radius: 50%;
    min-width: 3.125rem;
    min-height: 3.125rem;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-right: 10px;
}
section.contact .contact-info .icon i {
    font-size: 1.125rem;
    color: hsl(0, 0%, 100%);
}
:has(.mode:checked) section.contact .contact-info .icon i {
    color: hsl(0, 0%, 9%);
}
section.contact .contact-info > div h3 {
    font-family: var(--font-secondary);
    font-weight: 700;
    font-size: 1.25rem;
    color: #7d7d7d;
    margin-bottom: 5px;
}
:has(.mode:checked) section.contact .contact-info > div h3 {
    color: #adadad;
}
section.contact form {
    background-color: hsl(0, 0%, 100%);
    box-shadow: 0 0 1.875rem #00000014;
    padding: 1.25rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.9375rem;
}
:has(.mode:checked) section.contact form {
    background-color: hsl(0, 0%, 9%);
}
/* form > asterisk (*) = all direct childern inside form */
section.contact form > * {
    width: 100%;
}
section.contact form .input-group {
    display: flex;
    flex-wrap: wrap;
    gap: 0.9375rem;
}
section.contact form .input-group input {
    width: calc((100% - 0.9375rem) / 2);
}
@media (max-width: 992px) {
    section.contact form .input-group input {
        width: 100%;
    }
}
section.contact form textarea {
    min-height: 9.375rem;
    max-height: 18.75rem;
    /* vertical = can resize the height of the element */
    resize: vertical;
}
/* is () useful for writing large selectors in a more compact form */
section.contact form :is(input, textarea) {
    font-family: var(--font-page);
    padding: 0.9375rem 0.9375rem;
    border: 2px solid hsl(0, 10%, 90%);
    line-height: 1.5;
    transition: border-color 0.4s;
}
section.contact form :is(input, textarea):focus {
    border-color: var(--premier-color);
    outline: none;
}
section.contact form button {
    font-family: var(--font-page);
    width: fit-content;
    margin-top: 1.5625rem;
    padding: 12px 40px;
    border-radius: 100vh;
}
:has(.mode:checked) section.contact form button {
    color: hsl(0, 0%, 9%);
}
:has(.mode:checked) section.contact form button:hover {
    background-color: rgb(219, 143, 36);
}
/* End-Contact */
/* Start Footer */

/* Combine background image with gradient overlay
CSS gradients allow us to display smooth transitions between two or more colours.
They can be added on top of the background image by simply combining the background-image URL and gradient properties.
Syntax:

For linear-gradient on top of the Background Image:
element {
background-image: linear-gradient(direction, color-stop1, color-stop2, ...),
                url('url');
} */
footer {
    background-image: linear-gradient(#0009, #0009),
    url(../imgs/download.jpg);
    background-size: contain;
    box-shadow: 0px -1px 5px #0007;
    color: #fff;
}
footer .container {
    display: flex;
    flex-wrap: wrap;
    gap: 1.25rem;
}
/* width of subscribe =  width of social-media + width of info > (2)
width of social-media > (1)
width of info > (1)
*/
footer .container :is(.subscribe) {
    width: calc((100% - 40px) / 2);
}
footer .container :is(.social-media, .info) {
    width: calc((100% - 40px) / 4);
}
@media (max-width: 1200px) {
    footer .container :is(.social-media, .info) {
        width: calc((100% - 40px) / 2);
        
    }
    footer .container :is(.subscribe) {
        width: 100%;
        order: 1;
    }
}
@media (max-width: 768px) {
    footer .container :is(.social-media, .subscribe, .info) {
        width: 100%;
        order: 0;
    }
}
footer .social-media img {
    width: 2.5rem;
    height: 2.5rem;
}
/* :nth-child(n) 1-type of child  2- number of child inside the parent  */
footer .social-media div:nth-child(1) {
    display: flex;
    gap: 0.625rem;
    align-items: center;
}
footer .social-media p {
    margin-block: 0.625rem;
    font-family: var(--font-page);
}
footer .social-media h3 {
    padding: 0.625rem;
    text-align: center;
    margin-bottom: 0.625rem;
    border-bottom: 2px solid #ddd6;
    font-family: var(--font-secondary);
}
footer .social-media .social-links {
    display: flex;
    justify-content: space-around;
    padding: 0.625rem;
}
footer .social-media .social-links li a i {
    font-size: 1.5rem;
}
footer .subscribe .subscribe-section h3 {
    font-family: var(--font-secondary);
    font-weight: 700;
}
footer .subscribe .subscribe-section p {
    margin-block: 0.625rem;
    font-family: var(--font-page);
}
footer .subscribe .subscribe-section .input-group {
    display: flex;
    gap: 5px;
    justify-content: space-between;
    margin-block: 1.25rem;
    font-family: Arial, Helvetica, sans-serif;
}
@media (max-width: 576px) {
    footer .subscribe .subscribe-section .input-group {
        flex-direction: column;
        gap: 10px;
    }
}
footer .subscribe .subscribe-section .input-group input {
    flex-grow: 1;
    padding: 0.625rem;
    
}
/* The :focus-visible pseudo-class (also known as the “Focus-Indicated” pseudo-class) 
is a native CSS way to style elements that:
1-Are in focus
2-Need a visible indicator to show focus */
footer .subscribe .subscribe-section .input-group input:focus-visible {
    outline: none;
}
footer .subscribe .subscribe-section .input-group button {
    border-radius: 0;
    min-width: 6.875rem;
    padding: 0.625rem;
    font-family: Arial, Helvetica, sans-serif;
}
:has(.mode:checked) footer .subscribe .subscribe-section .input-group button {
    color: hsl(0, 0%, 9%);
}
:has(.mode:checked) footer .subscribe .subscribe-section .input-group button:hover {
    background-color: rgb(219, 143, 36);

}
footer .subscribe .quick-links h3 {
    font-family: var(--font-secondary);
    font-weight: 700;
}
footer .subscribe .quick-links ul {
    display: flex;
    column-gap: 1.25rem;
    flex-wrap: wrap;
    margin-top: 0.625rem;
}
footer .subscribe .quick-links ul li {
    width: calc((100% - 20px) / 2);
    padding: 5px;
    font-family: var(--font-page);
    position: relative;
    transition: background-color 0.4s,
                transform 0.4s;
}
footer .subscribe .quick-links ul li::before {
    content: "\f105";
    font-family: 'Font Awesome 5 Free';
    /* font: var(--fa-font-solid); */
    font-weight: 900;
    margin-right: 5px;
}
footer .subscribe .quick-links ul li:hover {
    background-color: #222;
    transform: translatex(10px);
}
footer .info h3 {
    font-family: var(--font-secondary);
    font-weight: 700;
    margin-bottom: 0.625rem;
}
footer .info ul li {
    display: flex;
    gap: 8px;
    align-items: center;
}
footer .info ul li i {
    width: 2.5rem;
    height: 2.5rem;
    font-size: 1.375rem;
    color: var(--premier-color);
    cursor: pointer;
    display: flex;
    justify-self: center;
    align-items: center;
}